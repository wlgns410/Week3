services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '5001:5001'
    volumes:
      - ./:/app/
      - /app/node_modules
    environment:
      - TZ=Asia/Seoul
      - NODE_ENV=local
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command:
      - bash
      - -c
      - npm run start
    depends_on:
      - mysql
      - redis
      - kafka

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: test1234
      MYSQL_DATABASE: concert
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      TZ: Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h localhost']
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:latest
    command: redis-server --requirepass testuser --port 6379
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - '2181:2181'

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper

volumes:
  mysql_data:

networks:
  default:
    name: my_network
